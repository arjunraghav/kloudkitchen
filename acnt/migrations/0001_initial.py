# Generated by Django 4.0.6 on 2022-08-13 13:30

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('customer_type', models.CharField(choices=[('C', 'CUSTOMER'), ('V', 'VENDOR'), ('A', 'ADMIN')], help_text='Are you a vendor?', max_length=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_number', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(help_text='Coupon title', max_length=30)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_number', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('balance', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_name', models.CharField(help_text='Name of the Restaurants/Hotel/Canteen or Caterers.', max_length=250, null=True)),
                ('phone_number', models.DecimalField(decimal_places=0, help_text='Enter your 10 digit phone number with country code', max_digits=12, null=True)),
                ('business_phone_number', models.DecimalField(decimal_places=0, help_text='Enter your 10 digit business contact number with country code', max_digits=12, null=True)),
                ('type', models.CharField(choices=[('RESTO', 'Restaurants/Hotel/Canteen'), ('CATER', 'Caterers')], max_length=10, null=True)),
                ('about', models.TextField(help_text='About your restaurant.', null=True)),
                ('address', models.CharField(help_text='Street address of the restaurant/organization.', max_length=250, null=True)),
                ('city', models.CharField(choices=[('BANGALORE', 'BANGALORE'), ('MYSORE', 'MYSORE')], help_text='Select your city.', max_length=20, null=True)),
                ('pincode', models.DecimalField(decimal_places=0, help_text='Pincode.', max_digits=6, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the testimonials.', max_length=150)),
                ('details', models.TextField(blank=True, help_text='Enter the details.', max_length=3000)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Try some title which users can relate to your review.', max_length=150)),
                ('details', models.TextField(blank=True, help_text='Enter the detailed review.', max_length=3000)),
                ('rate', models.PositiveSmallIntegerField(blank=True, choices=[(1, '1-Bad'), (2, '2-Average'), (3, '3-Good'), (4, '4-Very good'), (5, '5-Excellent')], help_text='Rate the Vendor.')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='acnt.vendorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liker', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='acnt.vendorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Followers', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='acnt.vendorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.DecimalField(decimal_places=0, help_text='Enter your 10 digit phone number with country code', max_digits=12, null=True)),
                ('about', models.TextField(help_text='About yourself.')),
                ('date_of_birth', models.DateField(help_text='Date of birth.', null=True)),
                ('address', models.CharField(help_text='Enter your street address.', max_length=250, null=True)),
                ('city', models.CharField(choices=[('BANGALORE', 'BANGALORE'), ('MYSORE', 'MYSORE')], help_text='Select your city.', max_length=20, null=True)),
                ('pincode', models.DecimalField(decimal_places=0, help_text='Pincode.', max_digits=6, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
